# -*- coding: utf-8 -*-
"""Programlama-ISorular.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vWuQ_IJhQECMRfsUq_KAgqUQU1zNLFcr
"""

'''
1 den 100 e kadar olan sayılardan aynı anda 3 ve 5 e tam bölünen
sayıları alt alta yazdıran python kodunu yazınız.
'''

for sayi in range(1, 101):
    if sayi % 3 == 0 and sayi % 5 == 0:
        print(sayi)

'''
Klavyeden girilen sayıya kadar olan sayılardan tek sayıların toplamını ve
çift sayıların toplamını ayrı ayrı bulan python kodunu yazınız.
'''

sayi = input('Bir Sayı Girin : ')
tekToplam=0
ciftToplam=0
for i in range(1,int(sayi)):
  if(i%2==0):
        ciftToplam+=i
  else:
        tekToplam+=i
print("Tek Sayıların Toplamı : {0}".format(tekToplam))
print("Çift Sayıların Toplamı : {0}".format(ciftToplam))

'''
20'ye kadar olan sayıları, 10'dan küçük ve 10'dan büyük şeklinde
listeleyecek Python kodu nasıl olmalıdır?
'''

for sayi in range(1, 20, 1):
  if sayi > 10:
    print(sayi, "--10 dan büyük")
  elif sayi == 10:
    print(sayi)
  else:
    print(sayi, "--10 dan küçük")

'''
Kullanıcının girdiği parolada Türkçe karakterlerin olmaması
gerekmektedir. Buna göre kullanıcının girdiği parolada Türkçe
karakter varsa “Parolada Türkçe karakter kullanılamaz.”
Türkçe karakter yoksa “Parolanız oluşturulmuştur.” ekrana
yazdırınız.
'''

turkishCharacters = "şçöğüİı"
password = input("Parolanız: ")
found_turkish_character = False

for character in password:
    if character in turkishCharacters:
        found_turkish_character = True
        break

if found_turkish_character:
    print("Parolada Türkçe karakter kullanılamaz.")
else:
    print("Parolanız oluşturulmuştur.")

'''
Bir while döngüsü kullanarak kullanıcının tahmin etmesi için
rastgele bir sayı oyunu oluşturan programı kodlayınız.
'''

import random

hedef_sayi = random.randint(1, 100)

tahmin = 0
tahmin_sayisi = 0

while tahmin != hedef_sayi:
    tahmin = int(input("Tahmininizi girin: "))
    tahmin_sayisi += 1

    if tahmin < hedef_sayi:
        print("Daha büyük bir sayı tahmin edin.")
    elif tahmin > hedef_sayi:
        print("Daha küçük bir sayı tahmin edin.")
    else:
        print(f"Tebrikler! {hedef_sayi} sayısını {tahmin_sayisi} tahminde buldunuz.")

'''
Kullanıcıdan alınan 5 sayı içerisinden for döngüsü kullanarak en
küçük sayıyı bulan programı kodlayınız.
'''

en_kucuk = None  # Başlangıçta en küçük değeri belirlemiyoruz
n = 5
for i in range(1, n+1):
    sayi = float(input(f"{i+1}. sayıyı girin: "))
    if en_kucuk is None or sayi < en_kucuk:
        en_kucuk = sayi

print("Girilen 5 sayı arasındaki en küçük sayı:", en_kucuk)

#1 den 10′ a kadar sayıları tersten yani 10′ dan geriye yazdırın.

for i in range(10, 0, -1):
    print(i)

'''
Kullanıcıdan isim ve soyisim bilgisini alan ve bunların harf
uzunluğunu bulan programı yazınız. (Kullanıcıdan aldığınız
değerleri bir diziye atayarak yapınız.)
'''

words = []
n = int(input("Kaç adet kelime gireceksiniz? "))

for _ in range(n):
    word = input("Ad soyad bilginizi giriniz: ")
    words.append(word)  # Listeye değeri ekle


for word in words:
    print(f"{word}: {len(word)} karakter")

'''
edges = [(3, 4, 5), (5, 12, 13), (2, 15, 17), (5, 5, 5), (5, 5, 8), (1, 24, 25)]

Bu listedeki üç sayıdan oluşan demetlerin (tuple) her birinin bir üçgen olup
olmadığını ve hangi üçgen tipi olduğunu kontrol eden programı yazınız.
'''


kenarlar = [(3, 4, 5), (5, 12, 13), (2, 15, 17), (5, 5, 5), (5, 5, 8), (1, 24, 25)]
for kenar in kenarlar:
    a, b, c = kenar
    if a + b > c and a + c > b and b + c > a:
        if a == b == c:
          print(f"{kenar} bir eşkenar üçgendir.")
        elif a == b or a == c or b == c:
          print(f"{kenar} bir ikizkenar üçgendir.")
        else:
          print(f"{kenar} bir çeşitkenar üçgendir.")
    else:
        print(f"{kenar} bir üçgen değildir.")

'''
Kullanıcıdan öğrenci adını ve üç sınav notunu girmesini isteyin.
Kullanıcı 'q' tuşuna basana kadar bu işlemi tekrarlansın. Ardından,
öğrenci not bilgilerini ekrana yazdırın, her öğrencinin adını,
notlarını ve ortalama notunu gösteren programı yazınız.
'''

# Öğrenci not bilgilerini içeren bir sözlük
ogrenci_notlari = {}

# Kullanıcıdan öğrenci bilgilerini alalım
while True:
    ogrenci_adı = input("Öğrenci adını girin (Çıkış için 'q' tuşuna basın): ")

    if ogrenci_adı.lower() == 'q':
        break  # Döngüyü sonlandır

    notlar = []
    for i in range(3):
        notlar.append(float(input(f"{ogrenci_adı}'nın {i+1}. sınav notunu girin: ")))

    ogrenci_notlari[ogrenci_adı] = notlar

# Öğrenci bilgilerini ekrana yazdıralım
print("\nÖğrenci Not Bilgileri:")
for ogrenci, notlar in ogrenci_notlari.items():
    ortalama = sum(notlar) / len(notlar)
    print(f"{ogrenci}: {notlar}, Ortalama: {ortalama:.2f}")

#Kullanıcıdan alınan bir sayının çarpım tablosunu yazdıran bir program yazın.

sayi = int(input("Bir sayi giriniz: "))

for i in range(1, 11, 1):
    carpim = sayi * i
    print(carpim)

'''
Bir listeden yalnızca aşağıdaki koşulları sağlayan sayıları görüntüleyen bir program yazın.

Sayının beşe bölünmesi gerekiyor
Sayı 150'den büyükse atlayıp bir sonraki sayıya geçin
Sayı 500'den büyükse döngüyü durdurun

numbers = [12, 75, 150, 180, 145, 525, 50]
'''

sayilar = [12, 75, 150, 180, 145, 525, 50]
for sayi in sayilar:
    if sayi > 500:
        break
    elif sayi > 150:
        continue
    elif sayi % 5 == 0:
        print(sayi)

boy  =int(input("Boyunuzu giriniz(cm): "))
kilo = int(input("Kilonuzu giriniz(kg): "))
vki  = 100*kilo / ((boy/10)**2)
if vki<18:
    print("Vücut Kitle İndeksiniz=",vki,"  Zayıf")
elif vki<25:
    print("Vücut Kitle İndeksiniz=",vki,"  Normal")
elif vki<30:
    print("Vücut Kitle İndeksiniz=",vki,"  Fazla")
else:
    print("Vücut Kitle İndeksiniz=",vki,"  Obez")

'''
Bir listedeki tek dizin konumlarında bulunan elemanları yazdıran programı yazınız

dizi = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
'''

my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
for i in my_list[1::2]:
    print(i, end=" ")

'''
Fibonacci serisini 0 ile 50 arasında elde eden bir Python programı yazınız.

Not: Fibonacci Dizisi bir sayı dizisidir:
0, 1, 1, 2, 3, 5, 8, 13, 21, ....
Her sonraki sayı, kendisinden önceki iki sayının toplanmasıyla bulunur.
'''

x = 0
y = 1
while y < 50:
    print(y)
    x, y = y, x + y

'''
0-9 aralığında girilen rakamları listeye yerleştirdikten sonra listedeki tüm rakamları birleştirerek tek bir sayı elde edip,
sayının karekökünü ekrana gönderen programı yazınız? Rakam yerine “q” girince program sonlanacak.

'''

liste = []
while True:
  sayi = input("Sayi giriniz: ")
  if sayi=="q":
    break
  liste.append(int(sayi))
yeniSayi = 0
for i in range(len(liste)):
  yeniSayi += liste[i] * (10**i)
print("Liste=",liste,"  Sayı=",yeniSayi,"  Karekökü=",yeniSayi**0.5)

'''
Klavyeden girilen bir listenin ilk ve son değerlerini alıp yeni liste oluşturan program
'''

sayi_listesi = []
for i in range(5):
    sayi = int(input(f"{i+1}. sayıyı girin: "))
    sayi_listesi.append(sayi)

# Yeni liste oluştur
yeni_liste = [sayi_listesi[0], sayi_listesi[-1]]

# Sonucu yazdır
print("Oluşturulan yeni liste:", yeni_liste)

# Liste tanımla
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

# 5'ten küçük olan elemanları yazdır
kucukler = []

for eleman in a:
    if eleman < 5:
        kucukler.append(eleman)

# Sonucu yazdır
print("5'ten küçük olan elemanlar:", kucukler)

'''
İki listedeki ortak elemanları döndüren program
'''

# İki liste tanımla
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

# Ortak öğeleri içeren bir liste oluştur
ortaklar = []

# İlk listedeki her elemanı kontrol et
for eleman_a in a:
    # Eğer bu eleman ikinci listede de varsa
    if eleman_a in b:
        # Eğer bu eleman daha önce eklenmemişse
        if eleman_a not in ortaklar:
            # Ortaklar listesine ekle
            ortaklar.append(eleman_a)

# Sonucu yazdır
print("Ortak öğeler:", ortaklar)

'''
k = 5 girildiğinde 1 ile 10 arasında değerler olan liste aşağıdaki gibi 5 defa kaydırılıyor. Bunu gerçekleştiren programı yazınız?
'''

k = 5
liste = list(range(1, 11))

for _ in range(k):
    liste = [liste[-1]] + liste[:-1]

    print(liste)

'''
Girilen bir sayının ebob ve ekok'unu hesaplayan fonsiyon
'''

def ebob_ekok_hesapla(birinciSayi, ikinciSayi):
  ebob = 1
  if birinciSayi > ikinciSayi:
    kucuksayi = ikinciSayi
  else:
    kucuksayi = birinciSayi
  for i in range(1, kucuksayi+1):
    if (birinciSayi % i == 0) and (ikinciSayi % i == 0):
      ebob = i
  ekok = (birinciSayi * ikinciSayi) // ebob
  return ebob, ekok

birinciSayi = int(input("Birinci Sayıyı Giriniz: "))
ikinciSayi = int(input("İkinci Sayıyı Giriniz: "))
ebob, ekok = ebob_ekok_hesapla(birinciSayi, ikinciSayi)
print("EBOB:", ebob)
print("EKOK:", ekok)

'''
Kullanıcıdan boy (cm) ve kilo (kg) bilgilerini aldıktan sonra Vücut Kilo İndeksini (VKİ) hesaplayan ve aşağıdaki tabloya göre
Durum bilgisini çıktı veren programı yazınız? Vki formul= weight / ((height / 100) ** 2)
'''

def vki_hesap(height, weight):
    height = 10
    vki = weight / ((height / 100) ** 2)
    return vki

def vki_kategorisi(vki):
    if vki < 18.5:
        return "Zayıf"
    elif 18.5 <= vki < 24.9:
        return "Normal"
    elif 25 <= vki < 29.9:
        return "Fazla Kilolu"
    elif 30 <= vki < 34.9:
        return "Şişman (Obezite - Sınıf I)"
    elif 35 <= vki < 39.9:
        return "Şişman (Obezite - Sınıf II)"
    else:
        return "Çok Şişman (Obezite - Sınıf III)"

def main():
    height = float(input("Boyunuzu (cm) girin: "))
    weight = float(input("Kilonuzu (kg) girin: "))

    a = vki_hesap(height, weight)
    vki_kategori = vki_kategorisi(a)

    print(f"Vücut Kitle İndeksiniz (VKİ): {a:.2f}")
    print(f"Durumunuz: {vki_kategori}")


main()

'''
Girilen sayının basamak değerleri kadar yıldızı yan yana yazdıran program?
Örnek) Sayı=7251

'''

def basamaklarinaAyir(sayi):
    while sayi > 0:
        basamak = sayi % 10
        yildizYazdir(basamak)
        sayi //= 10

def yildizYazdir(basamak):
    print(f"{basamak} {'x' * basamak}")

def main():
    sayi = int(input("Sayi girin: "))
    basamaklarinaAyir(sayi)

if __name__ == "__main__":
    main()

'''
0-9 aralığında girilen rakamları listeye yerleştirdikten sonra listedeki tüm rakamları birleştirerek tek bir sayı elde edip,
sayının karekökünü ekrana gönderen programı yazınız? Rakam yerine “q” girince program sonlanacak.

Örnek 1) Liste= [5, 8]   	Sayı= 85   		Karekökü= 9.21
Örnek 2) Liste= [7, 7, 1]   	Sayı= 177   	 	Karekökü= 13.304
Örnek 3) Liste= [8, 7, 4, 1]   	Sayı= 1478   	Karekökü= 38.444
'''

def hesapla_karekok():
    liste = []

    while True:
        a = input("a=")
        if a == "q":
            break
        liste.append(int(a))

    sayi = 0
    for i in range(len(liste)):
        sayi += liste[i] * (10**i)

    print("Liste=", liste, "  Sayı=", sayi, "  Karekökü=", sayi**0.5)

if __name__ == "__main__":
    hesapla_karekok()

#Aşağıdaki örneklerde gösterildiği gibi girilen saat ve dakika bilgilerini  yazıya çeviren programı yazınız?

def saat_cevir(saat, dakika):
    if dakika == 0:
        return f"Saat {saat}"
    elif dakika == 1:
        return f"Saat {saat}'i 1 geçiyor"
    elif dakika == 15:
        return f"Saat {saat} çeyrek"
    elif dakika == 30:
        return f"Saat {saat} buçuk"
    elif dakika < 30:
        return f"Saat {saat}'a {dakika} var"
    else:
        kalan_dakika = 60 - dakika
        yeni_saat = (saat + 1) % 24
        return f"Saat {yeni_saat}'a {kalan_dakika} var"

def main():
    saat_str = input("Saat (0-23): ")
    dakika_str = input("Dakika (0-59): ")

    saat = int(saat_str)
    dakika = int(dakika_str)

    if 0 <= saat < 24 and 0 <= dakika < 60:
        sonuc = saat_cevir(saat, dakika)
        print(sonuc)
    else:
        print("Geçersiz saat veya dakika girdisi.")

if __name__ == "__main__":
    main()

'''
Çıkmış Sınav Sorularından 2022-2023 Final Sınav Soruları

S adlı string değişkenden noktalama işaretlerini kaldırarak YS adlı yeni string değişkeni üretiniz?

'''

def noktalama_isaretlerini_kaldir(giris_str):
    noktalama_isaretleri = ".,;:!?()[]{}<>"
    sonuc_str = ""

    for char in giris_str:
        if char not in noktalama_isaretleri:
            sonuc_str += char

    return sonuc_str

S = "Programlamada uzmanlaşmak isteyen bir kişinin çok sayida soru çözmesi gerekir! Bu aşamayi sadece sebatkâr öğrenciler geçer? İkinci problem sorunun anlaşilmasidir, Dikkatini verenler bu aşamayi rahatlikla geçer. Üçüncü aşamada anlaşilan sorunun çözüm basamaklarinin ortaya çikarilmasidir. Bir kâğit ve bir kalem bu güçlüğü aşmak için yeterlidir; Belirlenen çözüm basamaklarinin kod bloklarina dönüşümü en kolay aşama olarak görülür."

YS = noktalama_isaretlerini_kaldir(S)

print("Orjinal String:")
print(S)
print("\nNoktalama İşaretleri Kaldırılmış String:")
print(YS)

'''
YS stringindeki her bir kelimeyi KelimeListe adlı bir listeye aktarınız?

'''

def noktalama_isaretlerini_kaldir(giris_str):
    noktalama_isaretleri = ".,;:!?()[]{}<>"
    sonuc_str = ""

    for char in giris_str:
        if char not in noktalama_isaretleri:
            sonuc_str += char

    return sonuc_str


def kelime_listesi_olustur(giris_str):
    kelime = ""
    kelime_list = []

    for char in giris_str:
        if char != " ":
            kelime += char
        else:
            if kelime != "":
                kelime_list.append(kelime)
                kelime = ""

    if kelime != "":
        kelime_list.append(kelime)

    return kelime_list

S = "Programlamada uzmanlaşmak isteyen bir kişinin çok sayida soru çözmesi gerekir! Bu aşamayi sadece sebatkâr öğrenciler geçer? İkinci problem sorunun anlaşilmasidir, Dikkatini verenler bu aşamayi rahatlikla geçer. Üçüncü aşamada anlaşilan sorunun çözüm basamaklarinin ortaya çikarilmasidir. Bir kâğit ve bir kalem bu güçlüğü aşmak için yeterlidir; Belirlenen çözüm basamaklarinin kod bloklarina dönüşümü en kolay aşama olarak görülür."

YS = noktalama_isaretlerini_kaldir(S)
KelimeListe = kelime_listesi_olustur(YS)

print("Orjinal String:")
print(S)
print("\nNoktalama İşaretleri Kaldırılmış String:")
print(YS)
print("\Kelime Listesi:")
print(KelimeListe)

'''
KelimeListe deki her bir kelimedeki karakterlerin ASCII değerlerin toplamını AsciiListe adlı bir listeye aktarınız? Not: Kelime bir alt fonksiyona gönderilecek ve fonksiyon çıktısı ASCII değer toplamı olacak.

'''

def ascii_toplami_hesaplama(kelime):
    ascii_toplam = 0
    for char in kelime:
        ascii_toplam += ord(char)
    return ascii_toplam

def ascii_list_olustur(KelimeListe):
    ascii_list = []
    for kelime in KelimeListe:
        ascii_toplam = ascii_toplami_hesaplama(kelime)
        ascii_list.append(ascii_toplam)
    return ascii_list

S = "Programlamada uzmanlaşmak isteyen bir kişinin çok sayida soru çözmesi gerekir! Bu aşamayi sadece sebatkâr öğrenciler geçer? İkinci problem sorunun anlaşilmasidir, Dikkatini verenler bu aşamayi rahatlikla geçer. Üçüncü aşamada anlaşilan sorunun çözüm basamaklarinin ortaya çikarilmasidir. Bir kâğit ve bir kalem bu güçlüğü aşmak için yeterlidir; Belirlenen çözüm basamaklarinin kod bloklarina dönüşümü en kolay aşama olarak görülür."

YS = noktalama_isaretlerini_kaldir(S)
KelimeListe = kelime_listesi_olustur(YS)
AsciiListe = ascii_list_olustur(KelimeListe)

print("Original String:")
print(S)
print("\nString without Punctuation:")
print(YS)
print("\Kelime List:")
print(KelimeListe)
print("\nASCII Toplamı Listesi:")
print(AsciiListe)

'''
AsciiListe deki sayıların basamak değerlerinde kaç adet tek sayı olduğunu hesaplayıp TekSayiListe adlı listeye aktaran programı özyinelemeli bir alt fonksiyon ile gerçekleştiriniz.

'''

def tek_rakamlari_say(sayi):
    tek_sayilarin_sayisi = 0

    while sayi > 0:
        son_basamak = sayi % 10
        if son_basamak % 2 == 1:
            tek_sayilarin_sayisi += 1
        sayi = sayi // 10

    return tek_sayilarin_sayisi

def ascii_list_isle(ascii_list):
    sonuc_list = []
    for num in ascii_list:
        odd_count = tek_rakamlari_say(num)
        sonuc_list.append(odd_count)
    return sonuc_list

# Örnek AsciiListe
AsciiListe = [1336, 1424, 769, 317, 993, 449, 635, 457, 1029, 745, 183, 977, 613, 974, 1385, 650, 830, 753, 794, 1721, 920, 867, 215, 977, 1053, 650, 1164, 948, 1183, 794, 960, 1469, 656, 1612, 285, 841, 219, 317, 522, 215, 1485, 761, 551, 1085, 1024, 960, 1469, 318, 1055, 1672, 211, 544, 751, 634]

TekSayiListe = ascii_list_isle(AsciiListe)

print("AsciiListe:")
print(AsciiListe)
print("\nTekSayiListe:")
print(TekSayiListe)

'''
2022-2023 Vize Soru 4.Soru
Liste kutucuklarındaki üstlü ifade sonuçları eşit olanları aynı renge boyadığımızda boyalı olmayan kutunun değerini ve
indeksini ekrana gönderen programı yazınız? Not: Liste boyutu ve içerisindeki sayıların taban ve üst bilgileri kullanıcı tarafından girilecektir.

'''

def ust_alma(taban, us):
    sonuc = 1
    for _ in range(us):
        sonuc *= taban
    return sonuc

def main():
    # Kullanıcıdan giriş al
    liste_boyutu = int(input("Liste boyutunu girin: "))

    # Liste oluştur
    liste = []
    for _ in range(liste_boyutu):
        taban = int(input("Tabanı girin: "))
        us = int(input("Üssü girin: "))
        liste.append(ust_alma(taban, us))

    # Renkli kutu oluştur
    renkli_kutu = {}
    for i in range(liste_boyutu):
        for j in range(i + 1, liste_boyutu):
            if liste[i] == liste[j]:
                if i not in renkli_kutu:
                    renkli_kutu[i] = i
                if j not in renkli_kutu:
                    renkli_kutu[j] = i

    # Boyalı olmayan kutunun değerini ve indeksini ekrana yazdır
    for i in range(liste_boyutu):
        if i not in renkli_kutu:
            print(f"Boyalı olmayan kutu: {liste[i]}, İndeks: {i}")
            break

if __name__ == "__main__":
    main()

#Bir sayının palindrom olup olmadığını kontrol etmek için Python işlevi

def palindromeCheck(num):
    temp = num
    rev = 0
    while(num != 0):
        r = num%10
        rev = rev*10+r
        num = num//10
    if(rev == temp):
        print(temp, "bir palindrom sayıdır")
    else:
        print(temp, "bir palindrom sayı degildir")


palindromeCheck(131)
palindromeCheck(34)

#Bir sayının faktöriyelini bulmak için Python işlevi

def factorial(n):
    fact = 1
    while(n!=0):
        fact *= n
        n = n-1
    print("Faktoriyeli",fact)

inputNumber = int(input("Sayi giriniz: "))
factorial(inputNumber)

'''
Aşağıdaki kurallara bağlı kalarak verilen gelir için gelir vergisini hesaplayın


İlk 10.000$ 0
Sonraki 10.000$ 10
Kalan 20


Örneğin, vergiye tabi gelirin 45000 olduğunu varsayarsak ve ödenecek gelir vergisi:

10000*0% + 10000*10% + 25000*20% = $6000
'''


def gelir_vergisi_hesapla(gelir):
    vergi_1_oran = 0
    vergi_2_oran = 10
    vergi_3_oran = 20

    limit_1 = 10000
    limit_2 = 20000

    # Vergi 1 hesaplama
    vergi_1 = 0
    if gelir <= limit_1:
        vergi_1 = gelir * (vergi_1_oran / 100)
    else:
        vergi_1 = limit_1 * (vergi_1_oran / 100)

    # Vergi 2 hesaplama
    vergi_2 = 0
    if gelir > limit_1:
        if gelir <= limit_1 + limit_2:
            vergi_2 = (gelir - limit_1) * (vergi_2_oran / 100)

        else:
            vergi_2 = limit_2 * (vergi_2_oran / 100)

    # Vergi 3 hesaplama
    vergi_3 = 0
    if gelir > limit_1 + limit_2:
        vergi_3 = (gelir - limit_1 - limit_2) * (vergi_3_oran / 100)

    # Toplam vergi hesaplama
    toplam_vergi = vergi_1 + vergi_2 + vergi_3
    return toplam_vergi

gelir_miktarı = 45000
odenecek_vergi = gelir_vergisi_hesapla(gelir_miktarı)

print(f"Vergiye tabi gelir: ${gelir_miktarı}")
print(f"Ödenecek gelir vergisi: ${odenecek_vergi}")

'''
Aşağıdaki koşullar kullanarak bir fonksiyon olusturan bir program yazın .
• Çalışanın adını ve maaşını kabul etmeli ve her ikisini de göstermelidir.
• İşlev çağrısında maaş eksikse maaşa varsayılan 9000 değerini atayın

Fonksiyon parametreleri aşağıdaki gibi olmalı

showEmployee ("Ben", 12000)
showEmployee (“Jessa")

'''

def show_employee(name, salary=9000):
  print("Name:", name, "salary", salary)


show_employee("Ben", 12000)
show_employee("“Jessa")

'''
n terime kadar serinin toplamını bulun
N terime kadar serilerin toplamını hesaplayan bir program yazınız.

Örneğin

n=5 ise

seri 2 + 22 + 222 + 2222 + 22222 = 24690 olacaksa


'''

def seri_toplam(n):
    toplam = 0
    sayi = 2

    for i in range(1, n + 1):
        toplam += int(str(sayi) * i)

    return toplam

n_degeri = 5
sonuc = seri_toplam(n_degeri)

print(f"n={n_degeri} için seri toplamı: {sonuc}")

